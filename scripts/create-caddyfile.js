const fs = require('fs');
const path = require('path');
const yaml = require('js-yaml');
require('dotenv').config({ path: path.join(__dirname, '..', '.env') });

const dockerComposePath = path.join(__dirname, '..', 'docker-compose.yml');
const dockerCompose = yaml.load(fs.readFileSync(dockerComposePath, 'utf-8'));
const services = dockerCompose.services;

const caddyfileHeader = `
# 
# WARNING:
# This file is automatically generated. Do not edit.
#

http:// {
  redir https://{host}{uri} permanent
}

www.freecodecamp.rocks {
  handle /ping {
    respond "pong" 200
  }
}
`;

let caddyfile = caddyfileHeader;

for (const serviceName in services) {
  if (serviceName === 'mongo' || serviceName === 'caddy') {
    continue;
  }

  const subdomain = serviceName === '25--5-clock' ? 'clock' : serviceName;
  const target = `${serviceName}:${
    services[serviceName].ports[0].split(':')[1]
  }`;

  caddyfile += `
${subdomain}.${process.env.DEMO_APPS_DOMAIN} {
  reverse_proxy ${target}
}
`;
}

const caddyfilePath = path.join(__dirname, '..', 'Caddyfile');

if (fs.existsSync(caddyfilePath)) {
  fs.unlinkSync(caddyfilePath);
}

fs.writeFileSync(caddyfilePath, caddyfile);
